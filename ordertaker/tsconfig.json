{
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "~/*": [
        "src/*"
      ]
    },

    "target": "ES2016",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", "pages/product.tsx"],
  "exclude": ["node_modules"]
}
//compilerOptions: TypeScript 컴파일러의 옵션을 설정합니다.
// "baseUrl": 모듈을 해석할 기본 경로를 설정합니다.
// "paths": 모듈 해석을 위한 경로 매핑을 설정합니다. 여기서 "~/*"는 "src/*"로 매핑되어 ~를 src/로 해석합니다.
// "composite": 프로젝트를 병합하여 빌드할지 여부를 설정합니다.
// "declaration": .d.ts 파일을 생성할지 여부를 설정합니다.
// "declarationMap": .d.ts.map 파일을 생성할지 여부를 설정합니다.
// "esModuleInterop": ES 모듈 형식의 모듈을 가져올 때 CommonJS 모듈 형식을 사용하는 모듈에 대한 대체 방법을 설정합니다.
// "forceConsistentCasingInFileNames": 파일 이름의 대소문자를 강제로 일관되게 맞출지 여부를 설정합니다.
// "suppressImplicitAnyIndexErrors": 암시적 any 타입을 가진 인덱스 항목에 대한 오류를 억제할지 여부를 설정합니다.
// "strictNullChecks": null과 undefined를 제한하는 타입 체크를 활성화할지 여부를 설정합니다.
// "strictPropertyInitialization": 클래스의 속성이 선언과 동시에 초기화되었는지 여부를 체크할지 여부를 설정합니다.
// "incremental": 증분적 컴파일을 활성화할지 여부를 설정합니다.
// "inlineSources": 컴파일된 파일에 소스 맵을 인라인으로 포함할지 여부를 설정합니다.
// "isolatedModules": 모든 파일이 독립적으로 처리되어 오직 전역 스코프만 사용하는지 여부를 설정합니다.
// "lib": 컴파일할 라이브러리 파일을 설정합니다.
// "module": 사용할 모듈 코드 생성 방식을 설정합니다.
// "moduleResolution": 모듈을 해석할 방법을 설정합니다.
// "noUnusedLocals", "noUnusedParameters": 사용되지 않는 로컬 변수 및 매개변수에 대한 경고를 활성화할지 여부를 설정합니다.
// "preserveWatchOutput": 워치 모드에서 출력 디렉토리를 유지할지 여부를 설정합니다.
// "resolveJsonModule": JSON 모듈을 해석할지 여부를 설정합니다.
// "skipLibCheck": 라이브러리 파일 검사를 건너뛸지 여부를 설정합니다.
// "typeRoots": 타입 정의 파일의 위치를 설정합니다.
// "jsx": JSX 문법을 허용하고 처리하는 방법을 설정합니다.
// "noEmit": 컴파일 후 JavaScript 파일을 생성하지 않을지 여부를 설정합니다.
// "target": 컴파일된 JavaScript의 ECMAScript 버전을 설정합니다.
// "allowJs": JavaScript 파일을 컴파일할지 여부를 설정합니다.
// "strict": 모든 엄격한 타입 체크 옵션을 활성화할지 여부를 설정합니다.
// include: 컴파일에 포함할 파일 및 디렉토리 패턴을 설정합니다. 여기서는 TypeScript 및 TypeScriptX 파일을 모두 포함하도록 설정되어 있습니다.

// exclude: 컴파일에서 제외할 파일 및 디렉토리 패턴을 설정합니다. 주로 노드 모듈과 같은 제3자 라이브러리를 제외하는 데 사용됩니다.